//variaveis
$cols    :12;
$gutter  :20px;
$L-device:1200px;
$m-device:760px;
$s-device:480px;

//Box-sizing
*,
*::after,
*::before {
  box-sizing: border-box;
}

//mixin media-querie
@mixin d($size) {
  @if $size==L {
    @media screen and (min-width: #{$L-device}) {
      @content;
    }
  }

  @else if $size==m {
    @media screen and(min-width: #{$m-device}) and (max-width:1199px) {
      @content;
    }
  }

  @else if $size==s {
    @media screen and(max-width: 759px) {
      @content;
    }
  }
}




//função grid
@function grid($col, $offset: false) {
  $width : $col / $cols * 100 + %;
  $result:calc(#{$width} - #{$gutter});

  @if $offset==offset {
    $gutter: $gutter / 2;
    $result:calc(#{$width} + #{$gutter});
  }

  @return $result;
}



//clsses grid
@for $i from 1 through $cols {
  .grid-#{$i} {
    width: grid($i);
  }
}

//mixin estrutura grid
@mixin grid-structure {
  float       : left;
  min-height  : 1px;
  margin-left : $gutter / 2;
  margin-right: $gutter / 2;

  @include d(s) {
    width       : 100%;
    float       : none;
    margin-left : 0;
    margin-right: 0;
  }
}

[class^="grid-"] {
  @include grid-structure;
}

//gera as classes de offset
@for $i from 1 through $cols {
  .offset-#{$i} {
    margin-left: grid($i, offset);

    @extend %offset;
  }
}

@include d(s) {
  %offset {
    margin-left: 0;
  }
}

//Mixin clearfix 
@mixin clearfix {

  &::after,
  &::before {
    content: '';
    display: table;
    clear  : both;
  }
}

//mixin container

@mixin container {
  max-width: $L-device;
  margin   : 0 auto;
  position : relative;

  @include d(m) {
    max-width: $m-device;
  }

  @include d(s) {
    max-width: $s-device;
    padding  : 0 10px;
  }

  @include clearfix;
}

.container {
  @include container;
}


@mixin row {
  position: relative;
  margin  : 0 $gutter/2;

  @include d(s) {
    margin: 0px;
  }

  @include clearfix()
}

.row {
  @include row;
}